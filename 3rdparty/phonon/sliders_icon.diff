Index: seekslider.cpp
===================================================================
--- seekslider.cpp	(revision 177)
+++ seekslider.cpp	(working copy)
@@ -247,6 +247,22 @@
     d->iconLabel.setPixmap(d->icon.pixmap(d->iconSize, d->slider.isEnabled() ? QIcon::Normal : QIcon::Disabled));
 }
 
+QIcon SeekSlider::icon() const
+{
+    return k_ptr->icon;
+}
+
+void SeekSlider::setIcon(const QIcon &icon)
+{
+    K_D(SeekSlider);
+    d->icon = icon;
+    if (d->icon.isNull()) {
+        d->iconLabel.setVisible(true);
+    }
+
+    d->iconLabel.setPixmap(d->icon.pixmap(d->iconSize, d->slider.isEnabled() ? QIcon::Normal : QIcon::Disabled));
+}
+
 } // namespace Phonon
 
 QT_END_NAMESPACE
Index: seekslider.h
===================================================================
--- seekslider.h	(revision 177)
+++ seekslider.h	(working copy)
@@ -90,12 +90,19 @@
     Q_PROPERTY(Qt::Orientation orientation READ orientation WRITE setOrientation)
 
     /**
-     * \brief the icon size used for the mute button/icon.
+     * The icon size used for the mute button/icon.
      *
      * The default size is defined by the GUI style.
      */
     Q_PROPERTY(QSize iconSize READ iconSize WRITE setIconSize)
 
+    /**
+     * The icon to be used instead of the default one for the mute button/icon.
+     *
+     * Default icon is "player-time".
+     */
+    Q_PROPERTY(QIcon icon READ icon WRITE setIcon)
+
     public:
         /**
          * Constructs a seek slider widget with the given \p parent.
@@ -117,12 +124,14 @@
         Qt::Orientation orientation() const;
         bool isIconVisible() const;
         QSize iconSize() const;
+        QIcon icon() const;
         MediaObject *mediaObject() const;
 
     public Q_SLOTS:
         void setOrientation(Qt::Orientation);
         void setIconVisible(bool);
         void setIconSize(const QSize &size);
+        void setIcon(const QIcon &icon);
 
         /**
          * Sets the media object to be controlled by this slider.
Index: volumeslider.cpp
===================================================================
--- volumeslider.cpp	(revision 177)
+++ volumeslider.cpp	(working copy)
@@ -97,6 +97,36 @@
     k_ptr->muteButton.setIconSize(iconSize);
 }
 
+QIcon VolumeSlider::volumeIcon() const
+{
+    return k_ptr->volumeIcon;
+}
+
+void VolumeSlider::setVolumeIcon(const QIcon &icon)
+{
+    K_D(VolumeSlider);
+    pDebug() << Q_FUNC_INFO << icon;
+    k_ptr->volumeIcon = icon;
+    if (d->output) {
+        d->_k_mutedChanged(d->output->isMuted());
+    }
+}
+
+QIcon VolumeSlider::mutedIcon() const
+{
+    return k_ptr->mutedIcon;
+}
+
+void VolumeSlider::setMutedIcon(const QIcon &icon)
+{
+    K_D(VolumeSlider);
+    pDebug() << Q_FUNC_INFO << icon;
+    k_ptr->mutedIcon = icon;
+    if (d->output) {
+        d->_k_mutedChanged(d->output->isMuted());
+    }
+}
+
 qreal VolumeSlider::maximumVolume() const
 {
     return k_ptr->slider.maximum() * 0.01;
Index: volumeslider.h
===================================================================
--- volumeslider.h	(revision 177)
+++ volumeslider.h	(working copy)
@@ -93,11 +93,26 @@
     Q_PROPERTY(bool muteVisible READ isMuteVisible WRITE setMuteVisible)
 
     /**
-     * \brief the icon size used for the mute button/icon.
+     * The icon size used for the mute button/icon.
      *
      * The default size is defined by the GUI style.
      */
     Q_PROPERTY(QSize iconSize READ iconSize WRITE setIconSize)
+
+    /**
+     * The volume icon to be used instead of the default one.
+     *
+     * Default icon used is "player-volume".
+     */
+    Q_PROPERTY(QIcon volumeIcon READ volumeIcon WRITE setVolumeIcon)
+
+    /**
+     * The muted icon to be used instead of the default one.
+     *
+     * Default icon used is "player-volume-muted".
+     */
+    Q_PROPERTY(QIcon mutedIcon READ mutedIcon WRITE setMutedIcon)
+
     public:
         /**
          * Constructs a new volume slider with a \p parent.
@@ -114,6 +129,8 @@
         void setSingleStep(int milliseconds);
         bool isMuteVisible() const;
         QSize iconSize() const;
+        QIcon volumeIcon() const;
+        QIcon mutedIcon() const;
         qreal maximumVolume() const;
         Qt::Orientation orientation() const;
         AudioOutput *audioOutput() const;
@@ -123,6 +140,8 @@
         void setOrientation(Qt::Orientation);
         void setMuteVisible(bool);
         void setIconSize(const QSize &size);
+        void setVolumeIcon(const QIcon &icon);
+        void setMutedIcon(const QIcon &icon);
 
         /**
          * Sets the audio output object to be controlled by this slider.
Index: volumeslider_p.h
===================================================================
--- volumeslider_p.h	(revision 178)
+++ volumeslider_p.h	(working copy)
@@ -29,6 +29,7 @@
 #include "factory_p.h"
 #include "audiooutput.h"
 #include <QtGui/QIcon>
+#include <QtGui/QStyle>
 #include <QtCore/QPointer>
 #include "platform_p.h"
 
@@ -45,8 +46,15 @@
             layout(QBoxLayout::LeftToRight, parent),
             slider(Qt::Horizontal, parent),
             muteButton(parent),
-            volumeIcon(Platform::icon(QLatin1String("player-volume"))),
-            mutedIcon(Platform::icon(QLatin1String("player-volume-muted"))),
+
+            //Default volume icon
+            //volumeIcon(Platform::icon(QLatin1String("player-volume"))),
+            volumeIcon(parent->style()->standardIcon(QStyle::SP_MediaVolume)),
+
+            //Default muted icon
+            //mutedIcon(Platform::icon(QLatin1String("player-volume-muted"))),
+            mutedIcon(parent->style()->standardIcon(QStyle::SP_MediaVolumeMuted)),
+
             output(0),
             ignoreVolumeChange(false)
         {
@@ -54,7 +62,9 @@
             slider.setPageStep(5);
             slider.setSingleStep(1);
 
+            //Set the default volume icon
             muteButton.setIcon(volumeIcon);
+
             muteButton.setAutoRaise(true);
             layout.setMargin(0);
             layout.setSpacing(2);
