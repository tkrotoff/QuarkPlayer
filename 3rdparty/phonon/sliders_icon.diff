Index: seekslider.cpp
===================================================================
--- seekslider.cpp	(revision 859154)
+++ seekslider.cpp	(working copy)
@@ -252,6 +252,18 @@
     d->iconLabel.setPixmap(d->icon.pixmap(d->iconSize, d->slider.isEnabled() ? QIcon::Normal : QIcon::Disabled));
 }
 
+QIcon SeekSlider::icon() const
+{
+    return k_ptr->icon;
+}
+
+void SeekSlider::setIcon(const QIcon &icon)
+{
+    K_D(SeekSlider);
+    d->icon = icon;
+    d->iconLabel.setPixmap(d->icon.pixmap(d->iconSize, d->slider.isEnabled() ? QIcon::Normal : QIcon::Disabled));
+}
+
 } // namespace Phonon
 
 #endif //QT_NO_PHONON_SEEKSLIDER
Index: seekslider.h
===================================================================
--- seekslider.h	(revision 859154)
+++ seekslider.h	(working copy)
@@ -95,12 +95,19 @@
     Q_PROPERTY(Qt::Orientation orientation READ orientation WRITE setOrientation)
 
     /**
-     * \brief the icon size used for the mute button/icon.
+     * The icon size used for the mute button/icon.
      *
      * The default size is defined by the GUI style.
      */
     Q_PROPERTY(QSize iconSize READ iconSize WRITE setIconSize)
 
+    /**
+     * The icon to be used instead of the default one for the mute button/icon.
+     *
+     * Default icon is "player-time".
+     */
+    Q_PROPERTY(QIcon icon READ icon WRITE setIcon)
+
     public:
         /**
          * Constructs a seek slider widget with the given \p parent.
@@ -122,12 +129,14 @@
         Qt::Orientation orientation() const;
         bool isIconVisible() const;
         QSize iconSize() const;
+        QIcon icon() const;
         MediaObject *mediaObject() const;
 
     public Q_SLOTS:
         void setOrientation(Qt::Orientation);
         void setIconVisible(bool);
         void setIconSize(const QSize &size);
+        void setIcon(const QIcon &icon);
 
         /**
          * Sets the media object to be controlled by this slider.
Index: volumeslider.cpp
===================================================================
--- volumeslider.cpp	(revision 859154)
+++ volumeslider.cpp	(working copy)
@@ -104,6 +104,41 @@
     k_ptr->muteButton.setIconSize(iconSize);
 }
 
+QIcon VolumeSlider::volumeIcon() const
+{
+    return k_ptr->volumeIcon;
+}
+
+void VolumeSlider::setVolumeIcon(const QIcon &icon)
+{
+    K_D(VolumeSlider);
+    pDebug() << Q_FUNC_INFO << icon;
+    k_ptr->volumeIcon = icon;
+    d->updateIcon();
+}
+
+QIcon VolumeSlider::mutedIcon() const
+{
+    return k_ptr->mutedIcon;
+}
+
+void VolumeSlider::setMutedIcon(const QIcon &icon)
+{
+    K_D(VolumeSlider);
+    pDebug() << Q_FUNC_INFO << icon;
+    k_ptr->mutedIcon = icon;
+    d->updateIcon();
+}
+
+void VolumeSliderPrivate::updateIcon()
+{
+    if (output && output->isMuted()) {
+        muteButton.setIcon(mutedIcon);
+    } else {
+        muteButton.setIcon(volumeIcon);
+    }
+}
+
 qreal VolumeSlider::maximumVolume() const
 {
     return k_ptr->slider.maximum() * 0.01;
Index: volumeslider.h
===================================================================
--- volumeslider.h	(revision 859154)
+++ volumeslider.h	(working copy)
@@ -98,11 +98,26 @@
     Q_PROPERTY(bool muteVisible READ isMuteVisible WRITE setMuteVisible)
 
     /**
-     * \brief the icon size used for the mute button/icon.
+     * The icon size used for the mute button/icon.
      *
      * The default size is defined by the GUI style.
      */
     Q_PROPERTY(QSize iconSize READ iconSize WRITE setIconSize)
+
+    /**
+     * The volume icon to be used instead of the default one.
+     *
+     * Default icon used is "player-volume".
+     */
+    Q_PROPERTY(QIcon volumeIcon READ volumeIcon WRITE setVolumeIcon)
+
+    /**
+     * The muted icon to be used instead of the default one.
+     *
+     * Default icon used is "player-volume-muted".
+     */
+    Q_PROPERTY(QIcon mutedIcon READ mutedIcon WRITE setMutedIcon)
+
     public:
         /**
          * Constructs a new volume slider with a \p parent.
@@ -119,6 +134,8 @@
         void setSingleStep(int milliseconds);
         bool isMuteVisible() const;
         QSize iconSize() const;
+        QIcon volumeIcon() const;
+        QIcon mutedIcon() const;
         qreal maximumVolume() const;
         Qt::Orientation orientation() const;
         AudioOutput *audioOutput() const;
@@ -128,6 +145,8 @@
         void setOrientation(Qt::Orientation);
         void setMuteVisible(bool);
         void setIconSize(const QSize &size);
+        void setVolumeIcon(const QIcon &icon);
+        void setMutedIcon(const QIcon &icon);
 
         /**
          * Sets the audio output object to be controlled by this slider.
Index: volumeslider_p.h
===================================================================
--- volumeslider_p.h	(revision 859154)
+++ volumeslider_p.h	(working copy)
@@ -76,6 +76,8 @@
 
         VolumeSlider *q_ptr;
 
+        void updateIcon();
+
         void _k_sliderChanged(int);
         void _k_volumeChanged(qreal);
         void _k_mutedChanged(bool);
